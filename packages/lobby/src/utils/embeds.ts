import { Lobby, User } from '@r6ru/db';
import { currentlyPlaying, EMOJI_REGEXP, EmojiButtons, HF_PLATFORM, IngameStatus as IS, RANK_BADGES, RANK_COLORS, RANKS, VERIFICATION_LEVEL, VERIFIED_BADGE, DONATE_BADGE, NITRO_BADGE, ADMIN_BADGE, RankGaps } from '@r6ru/types';
import { MessageAttachment } from 'discord.js';
import { GuildChannel } from 'discord.js';
import { GuildMember, MessageEmbed, MessageOptions, Util } from 'discord.js';
import bot from '../bot';
import ENV from './env';
import { LobbyStore } from './lobby';
import { LSRoom } from './lobby/room';
import { createEnhancedUserPreview, extractBorders, canQueue, rankedGap } from './preview';

const gitInfo = require('git-commit-info');
const versionHash = gitInfo().shortHash;

const memberTag = (lobby: LSRoom, user: User, member = lobby.dcGuild.members.get(user.id)) =>
  (lobby.dcLeader.id === user.id ? '\\üëë ' : '')
  + (!user.platform.PC ? '\\üéÆ' : '')
  + `<@${user.id}> (${bot.emojis.resolve(RANK_BADGES[user.rank])} **${Util.escapeMarkdown(user.nickname)}** - [${HF_PLATFORM[Object.entries(user.platform).find(e => e[1])[0]]}](${user.toString()})${(' | ' + user.region).replace(/.+emea/g, '').replace('ncsa', 'üåé').replace('apac', 'üåè')})`
  + ' '
  + (user.verificationLevel >= VERIFICATION_LEVEL.QR ? bot.emojis.resolve(VERIFIED_BADGE).toString() : '')
  + (member.roles.has(ENV.DONATE_ROLE) ? bot.emojis.resolve(DONATE_BADGE).toString() : '')
  + (member.roles.has(ENV.NITRO_ROLE) ? bot.emojis.resolve(NITRO_BADGE).toString() : '')
  + (member.permissions.has('MANAGE_ROLES') ? bot.emojis.resolve(ADMIN_BADGE).toString() : '')

export default class LobbyEmbedUtil {
  static addFields = (lobby: LSRoom, embed: MessageEmbed) => {
    if (lobby.hardplay) {
      embed.addField(`–†–µ–∂–∏–º "HardPlay\\${EmojiButtons.HARDPLAY}"`, `–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥ –¥–ª—è –≤—Ö–æ–¥–∞: \`${RANKS[lobby.guild.rankRoles.findIndex(r => lobby.guild.rankRoles[lobby.minRank] === r)]}\``);
    }

    if (lobby.close) {
      embed.addField('–ó–∞–∫—Ä—ã—Ç–æ–µ –ª–æ–±–±–∏', '–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∫–æ–≥–æ-–ª–∏–±–æ –∏–∑ –ª–æ–±–±–∏.');
    }

    if ([IS.NEWCOMER, IS.NEWCOMER_SEARCH].includes(lobby.status)) {
      embed.addField('–†–µ–∂–∏–º "–ù–æ–≤–∏—á–æ–∫"', '–û–ø—ã—Ç–Ω—ã–º –∏–≥—Ä–æ–∫–∞–º –ª—É—á—à–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥—É—é –∫–æ–º–Ω–∞—Ç—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–π.');
    }

    if (lobby.joinAllowed) {
      embed.addField('–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è:', `<#${lobby.channel}> üëà`);
    } else if (!lobby.close && (lobby.dcMembers.size < lobby.dcChannel.userLimit) && currentlyPlaying.includes(lobby.status)) {
      embed.addField('–õ–æ–±–±–∏ –∏–≥—Ä–∞–µ—Ç', `–°–µ–π—á–∞—Å –ª—É—á—à–µ –Ω–µ –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –∫–æ–º–Ω–∞—Ç—É, —á—Ç–æ–±—ã –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å –∏–≥—Ä–æ–∫–æ–≤.`);
    }

    return embed
  }

  static appealMsg = (lobby: LSRoom): MessageOptions => {
    const k = lobby.joinAllowed
      ? lobby.dcChannel.userLimit - lobby.dcMembers.size
      : 0

    let embed = new MessageEmbed()
      .setAuthor(LobbyEmbedUtil.modeSelector(lobby), lobby.dcLeader.user.displayAvatarURL())
      .setColor(RANK_COLORS[lobby.leader?.rank || 0])
      .setDescription(
        (lobby.members
          .sort((a, b) => b.rank - a.rank)
          .map(m => memberTag(lobby, m))
          .join('\n')
        )
        + (lobby.description ? `\n‚ñ´${Util.escapeMarkdown(lobby.description)}` : '')
        + (lobby.type === "ranked" && !canQueue([lobby.minRank, lobby.maxRank]) ? `\n**–†–∞–∑–±—Ä–æ—Å MMR –≤ –ª–æ–±–±–∏ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫ (>${rankedGap})**` : "")
      )
      .setFooter(`–í –∏–≥—Ä–µ –Ω–∏–∫–∏ Uplay –æ—Ç–ª–∏—á–∞—é—Ç—Å—è? C–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ —Å–∫—Ä–∏–Ω–æ–º —Ç–∞–±–∞. –° –≤–∞–º–∏ –Ω–µ–Ω–∞–¥–µ–∂–Ω—ã–π –∏–≥—Ä–æ–∫! ‚Ä¢ S: ${IS[lobby.status]} ID: ${lobby.id}`, 'https://i.imgur.com/sDOEWMV.png')
      .setThumbnail(`${ENV.LOBBY_SERVICE_URL}/v${versionHash}/lobby/${lobby.minRank}/${lobby.maxRank}/${k}/preview.png`)
      .setTimestamp();

    embed = LobbyEmbedUtil.addFields(lobby, embed)

    return { embed };
  }

  static appealMsgEnhanced = (lobby: LSRoom): MessageOptions => {
    let description = memberTag(lobby, lobby.leader) + '\n'
    if (lobby.members.length > 1) description += '‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n'
    description += lobby.members
      .filter(u => u.id !== lobby.leader.id)
      .sort((a, b) => b.rank - a.rank)
      .map(u => memberTag(lobby, u))
      .join('\n')
    description += '\`\`\`\n Ä·¥Ä…™…¥ ô·¥è·¥°6- Ä·¥úss…™·¥Ä ·¥ò Ä·¥á·¥ç…™·¥ú·¥ç  ü·¥è ô ô è               ‚Äî ‚ñ° √ó\n\`\`\`'
    description += (lobby.description ?? '') + (lobby.type === "ranked" && !canQueue([lobby.minRank, lobby.maxRank]) ? "\n**–†–∞–∑–±—Ä–æ—Å MMR –≤ –ª–æ–±–±–∏ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫ (>700)**" : "")

    let embed = new MessageEmbed()
      .setAuthor(LobbyEmbedUtil.modeSelector(lobby), lobby.dcLeader.user.displayAvatarURL())
      .setColor([118, 31, 230])
      .setDescription(description)
      .setFooter(`–•–æ—á–µ—à—å —Ç–∞–∫ –∂–µ? –°–º–æ—Ç—Ä–∏ #${(bot.channels.get('559714938000769034') as GuildChannel).name} ‚Ä¢ S: ${IS[lobby.status]} ID: ${lobby.id}`, 'https://cdn.discordapp.com/emojis/414787874374942721.png?v=1')
      .setThumbnail(`${ENV.LOBBY_SERVICE_URL}/v${versionHash}/leader/${lobby.dcLeader.id}/${lobby.dcLeader.user.avatar}/preview.gif`)
      .setTimestamp();

    embed = LobbyEmbedUtil.addFields(lobby, embed)

    return { embed }
  }

  static fastAppeal = async (LS: LobbyStore): Promise<MessageOptions> => {
    // console.log(LS.rooms.filter(l => !l.dcMembers.size).map(r => r.dcChannel.name));
    const embed = new MessageEmbed()
      .setAuthor(`–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –∫–æ–º–∞–Ω–¥—ã –≤ ${LS.category.name}`, LS.lfgChannel.guild.iconURL())
      .setFooter(`ID - ${LS.settings.type}`)
      .setDescription(`–ö–∞–Ω–∞–ª –ø–æ–∏—Å–∫–∞: ${LS.lfgChannel}\n`
        + `–í—Å–µ–≥–æ –ª–æ–±–±–∏: \`${LS.rooms.filter(v => Boolean(v.dcMembers.size)).size}\`\n`
        + `–ò—â—É—Ç –∏–≥—Ä–æ–∫–∞: \`${LS.rooms
          .filter(l => Boolean(l.dcMembers.size) && l.appealMessage && l.joinAllowed)
          .size
        || (LS.rooms
          .filter(l => Boolean(l.dcMembers.size) && Boolean(l.appealMessage))
          .size
          ? '–≤—Å–µ –∫–æ–º–Ω–∞—Ç—ã —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω—ã!'
          : 0)}\`\n`
        + `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç–µ: ${await (LS.rooms.filter(r => !r.dcMembers.size).last() || LS.rooms.last()).initInvite()} üëà`
      );
    LS.rooms
      .filter(l => Boolean(l.dcMembers.size) && l.appealMessage && l.joinAllowed)
      .sort((a, b) => a.dcChannel.position - b.dcChannel.position)
      .array()
      .slice(0, 24)
      .map(lobby =>
        embed.addField(
          LobbyEmbedUtil.modeSelector(lobby).replace(EMOJI_REGEXP, v => '\\' + v),
          (lobby.hardplay
            ? `HardPlay\\${EmojiButtons.HARDPLAY}: —Ç–æ–ª—å–∫–æ \`${RANKS[lobby.guild.rankRoles.findIndex(r => lobby.guild.rankRoles[lobby.minRank] === r)]}\` –∏ –≤—ã—à–µ\n`
            : `–†–∞–Ω–≥: ${lobby.minRank === lobby.maxRank
              ? (lobby.maxRank === 0
                ? '`–ª—é–±–æ–π`'
                : `–æ—Ç \`${RANKS[extractBorders([lobby.minRank, lobby.maxRank])[0]]}\`${bot.emojis.resolve(RANK_BADGES[extractBorders([lobby.minRank, lobby.maxRank])[0]])} –¥–æ \`${RANKS[extractBorders([lobby.minRank, lobby.maxRank])[1]]}\`${bot.emojis.resolve(RANK_BADGES[extractBorders([lobby.minRank, lobby.maxRank])[1]])}`)
              : `–æ—Ç \`${RANKS[lobby.minRank]}\`${bot.emojis.resolve(RANK_BADGES[lobby.minRank])} –¥–æ \`${RANKS[lobby.maxRank]}\`${bot.emojis.resolve(RANK_BADGES[lobby.maxRank])}`}\n`)
          + ([IS.NEWCOMER, IS.NEWCOMER_SEARCH].includes(lobby.status) ? '–ù–æ–≤–∏—á–æ–∫: –Ω–µ –≤—ã—à–µ `50` —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞\n' : '')
          + (lobby.description ? `–û–ø–∏—Å–∞–Ω–∏–µ: ${lobby.description}\n` : '')
          // + `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è: ${lobby.dcInvite.url} üëà\n`
          + `[–ø–æ–¥—Ä–æ–±–Ω–µ–µ...](${lobby.appealMessage.url})\n`
          + `„Ö§`
        )
      );
    return { embed };
  }

  static appealMsgPremium = (member: GuildMember, description: string, invite: string): MessageOptions => ({
    embed: new MessageEmbed()
      .setAuthor(
        `${member.user.tag} –∏—â–µ—Ç +${member.voice.channel.userLimit - member.voice.channel.members.size} –≤ —Å–≤–æ—é —É—é—Ç–Ω—É—é –∫–æ–º–Ω–∞—Ç—É | ${member.voice.channel.name}`,
        member.user.displayAvatarURL()
      ).setColor(12458289)
      .addField('üá∑6‚É£üá∑üá∫', description || ' ·ûµ·ûµ ·ûµ·ûµ')
      .addField('–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è', `${invite} üëà`)
      .setFooter(`–•–æ—Ç–∏—Ç–µ —Ç–∞–∫ –∂–µ? –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –õ–° –°–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –∫ ${member.guild.owner.user.tag} —Å —Ä—É–±–ª—è–º–∏ –∏–∑ –º–∞–º–∏–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ üíµ, –∏–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ Nitro Boost üíú.`, 'https://cdn.discordapp.com/emojis/414787874374942721.png?v=1')
      .setThumbnail(member.user.displayAvatarURL())
      .setTimestamp()
  })

  static modeSelector = (lobby: LSRoom) => {
    const slot = lobby.joinAllowed
      ? ` | +${lobby.dcChannel.userLimit - lobby.dcMembers.size} —Å–ª–æ—Ç(-–∞)`
      : '';
    switch (lobby.status) {
      case IS.CASUAL_SEARCH:
      case IS.RANKED_SEARCH:
      case IS.UNRANKED_SEARCH:
        return `–ü–æ–∏—Å–∫ –º–∞—Ç—á–∞ –≤ ${lobby.dcChannel.name}` + slot;
      case IS.CUSTOM_SEARCH:
        return `–ü–æ–∏—Å–∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –≤ ${lobby.dcChannel.name}` + slot;
      case IS.DISCOVERY_SEARCH:
        return `–ü–æ–∏—Å–∫ –†–∞–∑–≤–µ–¥–∫–∏ –≤ ${lobby.dcChannel.name}` + slot;
      case IS.NEWCOMER_SEARCH:
        return `–ü–æ–∏—Å–∫ —Ä–µ–∂–∏–º–∞ –ù–æ–≤–∏—á–æ–∫ –≤ ${lobby.dcChannel.name}` + slot;
      case IS.CASUAL:
      case IS.RANKED:
      case IS.CUSTOM:
      case IS.UNRANKED:
        return `–ò–≥—Ä–∞—é—Ç –≤ ${lobby.dcChannel.name}`;
      case IS.DISCOVERY:
        return `${lobby.dcChannel.name} –∏–≥—Ä–∞–µ—Ç –†–∞–∑–≤–µ–¥–∫—É` + slot;
      case IS.NEWCOMER:
        return `–ò–≥—Ä–∞—é—Ç —Ä–µ–∂–∏–º –ù–æ–≤–∏—á–æ–∫ –≤ ${lobby.dcChannel.name}`;
      case IS.TERRORIST_HUNT:
        return `${lobby.dcChannel.name} —Ä–∞–∑–º–∏–Ω–∞–µ—Ç—Å—è –≤ –ê–Ω—Ç–∏—Ç–µ—Ä—Ä–æ—Ä–µ` + slot;
      case IS.OTHER:
      case IS.MENU:
      default:
        return lobby.close || lobby.dcMembers.size >= lobby.dcChannel.userLimit
          ? `–ì–æ—Ç–æ–≤—ã –∏–≥—Ä–∞—Ç—å –≤ ${lobby.dcChannel.name}`
          : `–ò—â—É—Ç +${lobby.dcChannel.userLimit - lobby.dcMembers.size} –≤ ${lobby.dcChannel.name}`;
    }
  };
}

